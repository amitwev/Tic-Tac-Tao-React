{"ast":null,"code":"import _slicedToArray from \"D:\\\\My Personal Projects\\\\TicTacTao-React\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\My Personal Projects\\\\TicTacTao-React\\\\client\\\\src\\\\Components\\\\GameLogic\\\\SettingsModal.js\";\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default function SettingsModal({\n  show,\n  handleOnChangeModal,\n  handleCloseModal,\n  isAgainstRandom\n}) {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isRandomComputerChecked = _useState2[0],\n        setIsRandomComputerChecked = _useState2[1];\n\n  const handleChange = e => {\n    console.log(\"in child param id = \", e.target.id);\n\n    if (e.target.id === 'randomComputer') {\n      setIsRandomComputerChecked(true);\n    } else {\n      setIsRandomComputerChecked(false);\n    }\n\n    handleOnChangeModal(isRandomComputerChecked);\n  };\n\n  return React.createElement(Modal, {\n    show: show,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Game Settings\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, 'Computer: ', React.createElement(Form.Check, {\n    inline: true,\n    label: \"Random\",\n    type: 'radio',\n    name: 'computer',\n    id: 'randomComputer',\n    defaultChecked: isAgainstRandom,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Form.Check, {\n    inline: true,\n    label: \"AI\",\n    type: 'radio',\n    name: 'computer',\n    id: 'AIComputer',\n    defaultChecked: !isAgainstRandom,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleCloseModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Save\")));\n}","map":{"version":3,"sources":["D:/My Personal Projects/TicTacTao-React/client/src/Components/GameLogic/SettingsModal.js"],"names":["React","useState","Modal","Button","Form","SettingsModal","show","handleOnChangeModal","handleCloseModal","isAgainstRandom","isRandomComputerChecked","setIsRandomComputerChecked","handleChange","e","console","log","target","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,iBAApC;AACA,OAAO,sCAAP;AAEA,eAAe,SAASC,aAAT,CAAuB;AAACC,EAAAA,IAAD;AAAQC,EAAAA,mBAAR;AAA6BC,EAAAA,gBAA7B;AAA+CC,EAAAA;AAA/C,CAAvB,EAAyF;AAAA,oBACpCR,QAAQ,CAAC,IAAD,CAD4B;AAAA;AAAA,QAC5FS,uBAD4F;AAAA,QACnEC,0BADmE;;AAEpG,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,CAAC,CAACG,MAAF,CAASC,EAA7C;;AACA,QAAGJ,CAAC,CAACG,MAAF,CAASC,EAAT,KAAgB,gBAAnB,EAAoC;AAChCN,MAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACH,KAFD,MAEK;AACDA,MAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACH;;AACDJ,IAAAA,mBAAmB,CAACG,uBAAD,CAAnB;AACH,GARD;;AASA,SACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEJ,IADR;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,uBAAgB,+BAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAa,IAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CALF,EAUE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,YADL,EAEI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,MAAlB;AACY,IAAA,KAAK,EAAC,QADlB;AAEY,IAAA,IAAI,EAAE,OAFlB;AAGY,IAAA,IAAI,EAAE,UAHlB;AAIY,IAAA,EAAE,EAAE,gBAJhB;AAKY,IAAA,cAAc,EAAEG,eAL5B;AAMY,IAAA,QAAQ,EAAEG,YANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,MAAlB;AACY,IAAA,KAAK,EAAC,IADlB;AAEY,IAAA,IAAI,EAAE,OAFlB;AAGY,IAAA,IAAI,EAAE,UAHlB;AAIY,IAAA,EAAE,EAAE,YAJhB;AAKY,IAAA,cAAc,EAAE,CAACH,eAL7B;AAMY,IAAA,QAAQ,EAAEG,YANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAFJ,CAVF,EA8BE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CA9BF,CADF;AAoCD","sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function SettingsModal({show , handleOnChangeModal, handleCloseModal, isAgainstRandom }) {\r\n    const [ isRandomComputerChecked, setIsRandomComputerChecked ] = useState(true);\r\n    const handleChange = (e) => {\r\n        console.log(\"in child param id = \", e.target.id);\r\n        if(e.target.id === 'randomComputer'){\r\n            setIsRandomComputerChecked(true)\r\n        }else{\r\n            setIsRandomComputerChecked(false)\r\n        }            \r\n        handleOnChangeModal(isRandomComputerChecked)\r\n    }\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n    >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Game Settings\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* Computer Settings */}\r\n            <Form>\r\n                {'Computer: '}\r\n                <Form.Check inline \r\n                            label=\"Random\" \r\n                            type={'radio'} \r\n                            name={'computer'} \r\n                            id={'randomComputer'}\r\n                            defaultChecked={isAgainstRandom}\r\n                            onChange={handleChange}/>\r\n                <Form.Check inline \r\n                            label=\"AI\" \r\n                            type={'radio'} \r\n                            name={'computer'} \r\n                            id={'AIComputer'}\r\n                            defaultChecked={!isAgainstRandom}\r\n                            onChange={handleChange}/>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={handleCloseModal}>Save</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}