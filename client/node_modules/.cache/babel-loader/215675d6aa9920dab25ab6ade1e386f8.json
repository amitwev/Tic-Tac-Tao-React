{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\My Personal Projects\\\\TicTacTao-React\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\My Personal Projects\\\\TicTacTao-React\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\My Personal Projects\\\\TicTacTao-React\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\My Personal Projects\\\\TicTacTao-React\\\\client\\\\src\\\\Components\\\\GameLogic\\\\SettingsModal.js\";\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default function SettingsModal({\n  show,\n  handleOnChangeModal,\n  handleCloseModal\n}) {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isRandomComputerChecked = _useState2[0],\n        setIsRandomComputerChecked = _useState2[1];\n\n  const handleChange = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"in child param id = \", e.target.id);\n            _context.next = 3;\n            return e.target.id;\n\n          case 3:\n            _context.t0 = _context.sent;\n\n            if (!(_context.t0 === 'randomComputer')) {\n              _context.next = 8;\n              break;\n            }\n\n            setIsRandomComputerChecked(true);\n            _context.next = 9;\n            break;\n\n          case 8:\n            setIsRandomComputerChecked(false);\n\n          case 9:\n            handleOnChangeModal(isRandomComputerChecked);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function handleChange(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Modal, {\n    show: show,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Game Settings\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, 'Computer: ', React.createElement(Form.Check, {\n    inline: true,\n    label: \"Random\",\n    type: 'radio',\n    name: 'computer',\n    id: 'randomComputer',\n    defaultChecked: isRandomComputerChecked,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Form.Check, {\n    inline: true,\n    label: \"AI\",\n    type: 'radio',\n    name: 'computer',\n    id: 'AIComputer',\n    defaultChecked: !isRandomComputerChecked,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleCloseModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Save\")));\n}","map":{"version":3,"sources":["D:/My Personal Projects/TicTacTao-React/client/src/Components/GameLogic/SettingsModal.js"],"names":["React","useState","Modal","Button","Form","SettingsModal","show","handleOnChangeModal","handleCloseModal","isRandomComputerChecked","setIsRandomComputerChecked","handleChange","e","console","log","target","id"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,iBAApC;AACA,OAAO,sCAAP;AAEA,eAAe,SAASC,aAAT,CAAuB;AAACC,EAAAA,IAAD;AAAQC,EAAAA,mBAAR;AAA6BC,EAAAA;AAA7B,CAAvB,EAAwE;AAAA,oBACnBP,QAAQ,CAAC,IAAD,CADW;AAAA;AAAA,QAC3EQ,uBAD2E;AAAA,QAClDC,0BADkD;;AAEnF,QAAMC,YAAY;AAAA,wEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AACjBC,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,CAAC,CAACG,MAAF,CAASC,EAA7C;AADiB;AAAA,mBAEXJ,CAAC,CAACG,MAAF,CAASC,EAFE;;AAAA;AAAA;;AAAA,kCAEK,gBAFL;AAAA;AAAA;AAAA;;AAGXN,YAAAA,0BAA0B,CAAC,IAAD,CAHf;AAAA;AAAA;;AAAA;AAIXA,YAAAA,0BAA0B,CAAC,KAAD,CAJf;;AAAA;AAKjBH,YAAAA,mBAAmB,CAACE,uBAAD,CAAnB;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZE,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAOA,SACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEL,IADR;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,uBAAgB,+BAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAa,IAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CALF,EAUE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,YADL,EAEI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,MAAlB;AACY,IAAA,KAAK,EAAC,QADlB;AAEY,IAAA,IAAI,EAAE,OAFlB;AAGY,IAAA,IAAI,EAAE,UAHlB;AAIY,IAAA,EAAE,EAAE,gBAJhB;AAKY,IAAA,cAAc,EAAEG,uBAL5B;AAMY,IAAA,QAAQ,EAAEE,YANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,MAAlB;AACY,IAAA,KAAK,EAAC,IADlB;AAEY,IAAA,IAAI,EAAE,OAFlB;AAGY,IAAA,IAAI,EAAE,UAHlB;AAIY,IAAA,EAAE,EAAE,YAJhB;AAKY,IAAA,cAAc,EAAE,CAACF,uBAL7B;AAMY,IAAA,QAAQ,EAAEE,YANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAFJ,CAVF,EA8BE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CA9BF,CADF;AAoCD","sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function SettingsModal({show , handleOnChangeModal, handleCloseModal }) {\r\n    const [ isRandomComputerChecked, setIsRandomComputerChecked ] = useState(true);\r\n    const handleChange = async (e) => {\r\n        console.log(\"in child param id = \", e.target.id);\r\n        await e.target.id === 'randomComputer'\r\n            ? setIsRandomComputerChecked(true)\r\n            : setIsRandomComputerChecked(false)\r\n        handleOnChangeModal(isRandomComputerChecked)\r\n    }\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n    >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Game Settings\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* Computer Settings */}\r\n            <Form>\r\n                {'Computer: '}\r\n                <Form.Check inline \r\n                            label=\"Random\" \r\n                            type={'radio'} \r\n                            name={'computer'} \r\n                            id={'randomComputer'}\r\n                            defaultChecked={isRandomComputerChecked}\r\n                            onChange={handleChange}/>\r\n                <Form.Check inline \r\n                            label=\"AI\" \r\n                            type={'radio'} \r\n                            name={'computer'} \r\n                            id={'AIComputer'}\r\n                            defaultChecked={!isRandomComputerChecked}\r\n                            onChange={handleChange}/>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={handleCloseModal}>Save</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}