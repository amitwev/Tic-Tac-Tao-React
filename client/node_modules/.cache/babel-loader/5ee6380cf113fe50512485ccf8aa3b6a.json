{"ast":null,"code":"import _slicedToArray from \"D:\\\\My Personal Projects\\\\TicTacTao-React\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\My Personal Projects\\\\TicTacTao-React\\\\client\\\\src\\\\Components\\\\GameLogic\\\\GameLogic.js\";\nimport React, { useState } from 'react';\nimport Board from '../Board/Board';\nimport './GameLogic.css';\nimport Status from './Status';\nimport Player from './Player';\n\nconst GameLogic = () => {\n  //Init state for board and player turn\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isAgainstComputer = _useState2[0],\n        setIsAgainstComputer = _useState2[1];\n\n  const _useState3 = useState(Array(9).fill(null)),\n        _useState4 = _slicedToArray(_useState3, 2),\n        boardCards = _useState4[0],\n        setBoardCards = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        playerXturn = _useState6[0],\n        setPlayerXturn = _useState6[1]; //Player on click function\n\n\n  const resetBoard = () => {\n    setBoardCards(Array(9).fill(null));\n    setPlayerXturn(true);\n  };\n\n  const computerPlayer = () => {};\n\n  const winner = Status.someoneIsWinner(boardCards);\n  let status = Status.checkStatus(winner, playerXturn);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: 'status',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, status), React.createElement(Board, {\n    id: \"board\",\n    winner: winner,\n    playerClickOnCard: () => Player.playerClickOnCard(this, boardCards, setBoardCards, playerXturn, setPlayerXturn),\n    boardCards: boardCards,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: resetBoard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Reset Board\"));\n};\n\nexport default GameLogic;","map":{"version":3,"sources":["D:/My Personal Projects/TicTacTao-React/client/src/Components/GameLogic/GameLogic.js"],"names":["React","useState","Board","Status","Player","GameLogic","isAgainstComputer","setIsAgainstComputer","Array","fill","boardCards","setBoardCards","playerXturn","setPlayerXturn","resetBoard","computerPlayer","winner","someoneIsWinner","status","checkStatus","playerClickOnCard"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB;AADoB,oBAE+BJ,QAAQ,CAAC,IAAD,CAFvC;AAAA;AAAA,QAEZK,iBAFY;AAAA,QAEOC,oBAFP;;AAAA,qBAGkBN,QAAQ,CAACO,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAH1B;AAAA;AAAA,QAGZC,UAHY;AAAA,QAGAC,aAHA;;AAAA,qBAImBV,QAAQ,CAAC,IAAD,CAJ3B;AAAA;AAAA,QAIZW,WAJY;AAAA,QAICC,cAJD,kBAKpB;;;AACA,QAAMC,UAAU,GAAG,MAAM;AACrBH,IAAAA,aAAa,CAACH,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAb;AACAI,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAHD;;AAIA,QAAME,cAAc,GAAE,MAAM,CAE3B,CAFD;;AAKA,QAAMC,MAAM,GAAGb,MAAM,CAACc,eAAP,CAAuBP,UAAvB,CAAf;AACA,MAAIQ,MAAM,GAAGf,MAAM,CAACgB,WAAP,CAAmBH,MAAnB,EAA2BJ,WAA3B,CAAb;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAE,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBM,MAApB,CADJ,EAEI,oBAAC,KAAD;AAAQ,IAAA,EAAE,SAAV;AACQ,IAAA,MAAM,EAAEF,MADhB;AAEQ,IAAA,iBAAiB,EAAE,MAAMZ,MAAM,CAACgB,iBAAP,CAAyB,IAAzB,EAA+BV,UAA/B,EAA2CC,aAA3C,EAA0DC,WAA1D,EAAuEC,cAAvE,CAFjC;AAGQ,IAAA,UAAU,EAAEH,UAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAMI;AAAQ,IAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,CADJ;AAUH,CA3BD;;AA4BA,eAAeT,SAAf","sourcesContent":["import React, { useState }  from 'react'; \r\nimport Board from '../Board/Board';\r\nimport './GameLogic.css';\r\nimport Status from './Status';\r\nimport Player from './Player';\r\n\r\nconst GameLogic = () => {\r\n    //Init state for board and player turn\r\n    const [ isAgainstComputer, setIsAgainstComputer] = useState(true);\r\n    const [ boardCards, setBoardCards ] = useState(Array(9).fill(null));\r\n    const [ playerXturn, setPlayerXturn] = useState(true); \r\n    //Player on click function\r\n    const resetBoard = () => {\r\n        setBoardCards(Array(9).fill(null));\r\n        setPlayerXturn(true);\r\n    }\r\n    const computerPlayer =() => {\r\n\r\n    }\r\n    \r\n\r\n    const winner = Status.someoneIsWinner(boardCards); \r\n    let status = Status.checkStatus(winner, playerXturn); \r\n    return(\r\n        <div>\r\n            <div id={'status'}>{status}</div>\r\n            <Board  id={`board` }\r\n                    winner={winner}\r\n                    playerClickOnCard={() => Player.playerClickOnCard(this, boardCards, setBoardCards, playerXturn, setPlayerXturn)}\r\n                    boardCards={boardCards}/>\r\n            <button onClick={resetBoard}>Reset Board</button>\r\n        </div>\r\n    )\r\n}\r\nexport default GameLogic;"]},"metadata":{},"sourceType":"module"}