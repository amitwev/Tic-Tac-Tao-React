{"ast":null,"code":"import _slicedToArray from \"D:\\\\My Personal Projects\\\\TicTacTao-React\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\My Personal Projects\\\\TicTacTao-React\\\\client\\\\src\\\\Components\\\\GameLogic\\\\GameLogic.js\";\nimport React from 'react';\nimport Board from '../Board/Board';\n\nconst GameLogic = () => {\n  const _useState = useState(Array(9).fill(null)),\n        _useState2 = _slicedToArray(_useState, 2),\n        boardCards = _useState2[0],\n        setBoardCards = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        playerXturn = _useState4[0],\n        setPlayerXturn = _useState4[1];\n\n  const playerClickOnCard = index => {\n    const cardsArr = [...boardCards];\n\n    if (cardsArr[index]) {\n      console.log('inside if');\n      return;\n    }\n\n    cardsArr[index] = playerXturn ? 'X' : 'O';\n    setBoardCards(cardsArr);\n    setPlayerXturn(!playerXturn);\n  };\n\n  let status = \"Player \".concat(playerXturn ? 'X' : 'O', \" turn\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Board, {\n    playerClickOnCard: playerClickOnCard,\n    boardCards: boardCards,\n    status: status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};\n\nexport default GameLogic;","map":{"version":3,"sources":["D:/My Personal Projects/TicTacTao-React/client/src/Components/GameLogic/GameLogic.js"],"names":["React","Board","GameLogic","useState","Array","fill","boardCards","setBoardCards","playerXturn","setPlayerXturn","playerClickOnCard","index","cardsArr","console","log","status"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACkBC,QAAQ,CAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAD1B;AAAA;AAAA,QACZC,UADY;AAAA,QACAC,aADA;;AAAA,qBAEmBJ,QAAQ,CAAC,IAAD,CAF3B;AAAA;AAAA,QAEZK,WAFY;AAAA,QAECC,cAFD;;AAGpB,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,UAAMC,QAAQ,GAAG,CAAC,GAAGN,UAAJ,CAAjB;;AACA,QAAGM,QAAQ,CAACD,KAAD,CAAX,EAAmB;AACfE,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA;AACH;;AACDF,IAAAA,QAAQ,CAACD,KAAD,CAAR,GAAkBH,WAAW,GAAG,GAAH,GAAS,GAAtC;AACAD,IAAAA,aAAa,CAACK,QAAD,CAAb;AACAH,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACH,GATD;;AAUA,MAAIO,MAAM,oBAAaP,WAAW,GAAG,GAAH,GAAS,GAAjC,UAAV;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAQ,IAAA,iBAAiB,EAAEE,iBAA3B;AACQ,IAAA,UAAU,EAAEJ,UADpB;AAEQ,IAAA,MAAM,EAAES,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAOH,CArBD;;AAuBA,eAAeb,SAAf","sourcesContent":["import React from 'react'; \r\nimport Board from '../Board/Board';\r\n\r\nconst GameLogic = () => {\r\n    const [ boardCards, setBoardCards ] = useState(Array(9).fill(null));\r\n    const [ playerXturn, setPlayerXturn] = useState(true); \r\n    const playerClickOnCard = (index) => {\r\n        const cardsArr = [...boardCards]; \r\n        if(cardsArr[index]){\r\n            console.log('inside if')\r\n            return; \r\n        }\r\n        cardsArr[index] = playerXturn ? 'X' : 'O'; \r\n        setBoardCards(cardsArr); \r\n        setPlayerXturn(!playerXturn); \r\n    }\r\n    let status = `Player ${playerXturn ? 'X' : 'O'} turn`;\r\n    return(\r\n        <div>\r\n            <Board  playerClickOnCard={playerClickOnCard}\r\n                    boardCards={boardCards}\r\n                    status={status} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameLogic;"]},"metadata":{},"sourceType":"module"}