{"ast":null,"code":"import _slicedToArray from \"D:\\\\My Personal Projects\\\\TicTacTao-React\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\My Personal Projects\\\\TicTacTao-React\\\\client\\\\src\\\\Components\\\\GameLogic\\\\GameLogic.js\";\nimport React, { useState } from 'react';\nimport Board from '../Board/Board';\n\nconst GameLogic = () => {\n  //Init state for board and player turn\n  const _useState = useState(Array(9).fill(null)),\n        _useState2 = _slicedToArray(_useState, 2),\n        boardCards = _useState2[0],\n        setBoardCards = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        playerXturn = _useState4[0],\n        setPlayerXturn = _useState4[1]; //Player on click function\n\n\n  const playerClickOnCard = index => {\n    const cardsArr = [...boardCards];\n\n    if (cardsArr[index]) {\n      console.log('inside if');\n      return;\n    }\n\n    cardsArr[index] = playerXturn ? 'X' : 'O';\n    setBoardCards(cardsArr);\n    setPlayerXturn(!playerXturn);\n  };\n\n  const someoneIsWinner = boardCards => {\n    //Winner Combination\n    const winnerCombination = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [1, 3, 6], [2, 4, 7], [2, 5, 8], [0, 4, 8], [3, 5, 7]];\n\n    for (let i = 0; i < winnerCombination.length; i++) {\n      const _winnerCombination$i = winnerCombination[i],\n            a = _winnerCombination$i.a,\n            b = _winnerCombination$i.b,\n            c = _winnerCombination$i.c;\n\n      if (boardCards[a] && boardCards[a] === boardCards[b] && boardCards[b] === boardCards[c]) {\n        return boardCards[a];\n      }\n    }\n\n    return;\n  };\n\n  const winner = someoneIsWinner(boardCards);\n  let status = winner ? \"Winner is \".concat(winner, \"!\") : \"Player \".concat(playerXturn ? 'X' : 'O', \" turn\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Board, {\n    playerClickOnCard: playerClickOnCard,\n    boardCards: boardCards,\n    status: status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};\n\nexport default GameLogic;","map":{"version":3,"sources":["D:/My Personal Projects/TicTacTao-React/client/src/Components/GameLogic/GameLogic.js"],"names":["React","useState","Board","GameLogic","Array","fill","boardCards","setBoardCards","playerXturn","setPlayerXturn","playerClickOnCard","index","cardsArr","console","log","someoneIsWinner","winnerCombination","i","length","a","b","c","winner","status"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB;AADoB,oBAEkBF,QAAQ,CAACG,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAF1B;AAAA;AAAA,QAEZC,UAFY;AAAA,QAEAC,aAFA;;AAAA,qBAGmBN,QAAQ,CAAC,IAAD,CAH3B;AAAA;AAAA,QAGZO,WAHY;AAAA,QAGCC,cAHD,kBAIpB;;;AACA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,UAAMC,QAAQ,GAAG,CAAC,GAAGN,UAAJ,CAAjB;;AACA,QAAGM,QAAQ,CAACD,KAAD,CAAX,EAAmB;AACfE,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA;AACH;;AACDF,IAAAA,QAAQ,CAACD,KAAD,CAAR,GAAkBH,WAAW,GAAG,GAAH,GAAS,GAAtC;AACAD,IAAAA,aAAa,CAACK,QAAD,CAAb;AACAH,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACH,GATD;;AAUA,QAAMO,eAAe,GAAIT,UAAD,IAAgB;AACpC;AACA,UAAMU,iBAAiB,GAAG,CACtB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADsB,EAEtB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAFsB,EAGtB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHsB,EAItB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAJsB,EAKtB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CALsB,EAMtB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CANsB,EAOtB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAPsB,EAQtB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CARsB,CAA1B;;AAUA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,iBAAiB,CAACE,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAAA,mCAC3BD,iBAAiB,CAACC,CAAD,CADU;AAAA,YACvCE,CADuC,wBACvCA,CADuC;AAAA,YACpCC,CADoC,wBACpCA,CADoC;AAAA,YACjCC,CADiC,wBACjCA,CADiC;;AAE/C,UAAGf,UAAU,CAACa,CAAD,CAAV,IAAiBb,UAAU,CAACa,CAAD,CAAV,KAAkBb,UAAU,CAACc,CAAD,CAA7C,IAAoDd,UAAU,CAACc,CAAD,CAAV,KAAkBd,UAAU,CAACe,CAAD,CAAnF,EAAwF;AACpF,eAAOf,UAAU,CAACa,CAAD,CAAjB;AACH;AAEJ;;AACD;AACH,GApBD;;AAqBA,QAAMG,MAAM,GAAGP,eAAe,CAACT,UAAD,CAA9B;AACA,MAAIiB,MAAM,GAAGD,MAAM,uBAAgBA,MAAhB,0BAAqCd,WAAW,GAAG,GAAH,GAAS,GAAzD,UAAnB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAQ,IAAA,iBAAiB,EAAEE,iBAA3B;AACQ,IAAA,UAAU,EAAEJ,UADpB;AAEQ,IAAA,MAAM,EAAEiB,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAOH,CA7CD;;AA+CA,eAAepB,SAAf","sourcesContent":["import React, { useState }  from 'react'; \r\nimport Board from '../Board/Board';\r\n\r\nconst GameLogic = () => {\r\n    //Init state for board and player turn\r\n    const [ boardCards, setBoardCards ] = useState(Array(9).fill(null));\r\n    const [ playerXturn, setPlayerXturn] = useState(true); \r\n    //Player on click function\r\n    const playerClickOnCard = (index) => {\r\n        const cardsArr = [...boardCards]; \r\n        if(cardsArr[index]){\r\n            console.log('inside if')\r\n            return; \r\n        }\r\n        cardsArr[index] = playerXturn ? 'X' : 'O'; \r\n        setBoardCards(cardsArr); \r\n        setPlayerXturn(!playerXturn); \r\n    }\r\n    const someoneIsWinner = (boardCards) => {\r\n        //Winner Combination\r\n        const winnerCombination = [\r\n            [0,1,2],\r\n            [3,4,5],\r\n            [6,7,8],\r\n            [1,3,6],\r\n            [2,4,7],\r\n            [2,5,8],\r\n            [0,4,8],\r\n            [3,5,7]\r\n        ]; \r\n        for (let i = 0; i < winnerCombination.length; i++) {\r\n            const { a, b, c } = winnerCombination[i];\r\n            if(boardCards[a] && boardCards[a] === boardCards[b] && boardCards[b] === boardCards[c]) {\r\n                return boardCards[a];\r\n            }\r\n            \r\n        }\r\n        return;\r\n    }\r\n    const winner = someoneIsWinner(boardCards); \r\n    let status = winner ? `Winner is ${winner}!` :`Player ${playerXturn ? 'X' : 'O'} turn`;\r\n    return(\r\n        <div>\r\n            <Board  playerClickOnCard={playerClickOnCard}\r\n                    boardCards={boardCards}\r\n                    status={status} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameLogic;"]},"metadata":{},"sourceType":"module"}