{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Personal Projects\\\\TicTacTao-React\\\\client\\\\src\\\\Components\\\\GameLogic\\\\SettingsModal.js\";\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default function SettingsModal({\n  show,\n  handleOnChangeAgainstRandom,\n  handleOnChangeIsPlayerFirst,\n  handleCloseModal,\n  isAgainstRandom,\n  isPlayerFirst\n}) {\n  console.log(\"inside modal  is against random player= \", isAgainstRandom, \"is player start = \", isPlayerFirst);\n  return React.createElement(Modal, {\n    show: show,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Game Settings\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, 'Computer: ', React.createElement(Form.Check, {\n    inline: true,\n    label: \"Random\",\n    type: 'radio',\n    name: 'computer',\n    id: 'randomComputer',\n    checked: isAgainstRandom ? true : false,\n    onChange: handleOnChangeAgainstRandom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Form.Check, {\n    inline: true,\n    label: \"AI\",\n    type: 'radio',\n    name: 'computer',\n    id: 'AIComputer',\n    checked: isAgainstRandom ? false : true,\n    onChange: handleOnChangeAgainstRandom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, 'Who Start: ', React.createElement(Form.Check, {\n    inline: true,\n    label: \"Computer\",\n    type: 'radio',\n    name: 'computer',\n    id: 'startComputer',\n    checked: isPlayerFirst ? false : true,\n    onChange: handleOnChangeIsPlayerFirst,\n    value: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Form.Check, {\n    inline: true,\n    label: \"Me\",\n    type: 'radio',\n    name: 'me',\n    id: 'startMe',\n    checked: isPlayerFirst ? true : false,\n    onChange: handleOnChangeIsPlayerFirst,\n    value: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleCloseModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Save\")));\n}","map":{"version":3,"sources":["D:/My Personal Projects/TicTacTao-React/client/src/Components/GameLogic/SettingsModal.js"],"names":["React","useState","Modal","Button","Form","SettingsModal","show","handleOnChangeAgainstRandom","handleOnChangeIsPlayerFirst","handleCloseModal","isAgainstRandom","isPlayerFirst","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function SettingsModal({show , handleOnChangeAgainstRandom,handleOnChangeIsPlayerFirst, handleCloseModal, isAgainstRandom, isPlayerFirst }) {\r\n    console.log(\"inside modal  is against random player= \", isAgainstRandom, \"is player start = \", isPlayerFirst);\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n    >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Game Settings\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* Computer Settings */}\r\n            <Form>\r\n                <div>\r\n                  {'Computer: '}\r\n                  <Form.Check inline \r\n                              label=\"Random\" \r\n                              type={'radio'} \r\n                              name={'computer'} \r\n                              id={'randomComputer'}\r\n                              checked={isAgainstRandom ? true: false}\r\n                              onChange={handleOnChangeAgainstRandom}/>\r\n                  <Form.Check inline \r\n                              label=\"AI\" \r\n                              type={'radio'} \r\n                              name={'computer'} \r\n                              id={'AIComputer'}\r\n                              checked={isAgainstRandom ? false: true }\r\n                              onChange={handleOnChangeAgainstRandom}/>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                  {'Who Start: '}\r\n                  <Form.Check inline \r\n                              label=\"Computer\" \r\n                              type={'radio'} \r\n                              name={'computer'} \r\n                              id={'startComputer'}\r\n                              checked={isPlayerFirst ? false : true}\r\n                              onChange={handleOnChangeIsPlayerFirst}\r\n                              value={false}/>\r\n                  <Form.Check inline \r\n                              label=\"Me\" \r\n                              type={'radio'} \r\n                              name={'me'} \r\n                              id={'startMe'}\r\n                              checked={isPlayerFirst ? true : false }\r\n                              onChange={handleOnChangeIsPlayerFirst}\r\n                              value={true}/>\r\n                </div>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={handleCloseModal}>Save</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}